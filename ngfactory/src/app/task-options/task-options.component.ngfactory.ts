/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '../../../../src/app/task-options/task-options.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '../../../../src/app/services/TaskService';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/core/src/linker/query_list';
import * as import12 from '../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/common/src/directives/ng_if';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import17 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import18 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/common/src/directives/ng_for';
import * as import21 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import22 from '@angular/forms/src/directives/control_container';
import * as import23 from '@angular/forms/src/directives/ng_control_status';
import * as import24 from '../../../node_modules/@angular/common/src/directives/ng_switch.ngfactory';
import * as import25 from '@angular/common/src/directives/ng_switch';
import * as import26 from '../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import27 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import28 from '@angular/forms/src/directives/default_value_accessor';
import * as import29 from '@angular/forms/src/directives/control_value_accessor';
import * as import30 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import31 from '@angular/forms/src/directives/ng_control';
import * as import32 from '../../../node_modules/@angular/forms/src/directives/select_control_value_accessor.ngfactory';
import * as import33 from '@angular/forms/src/directives/select_control_value_accessor';
import * as import34 from '../../../node_modules/@angular/forms/src/directives/select_multiple_control_value_accessor.ngfactory';
import * as import35 from '@angular/forms/src/directives/select_multiple_control_value_accessor';
import * as import36 from '../../../node_modules/@angular/forms/src/directives/checkbox_value_accessor.ngfactory';
import * as import37 from '@angular/forms/src/directives/checkbox_value_accessor';
export class Wrapper_TaskOptionsComponent {
  context:import0.TaskOptionsComponent;
  changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  constructor(p0:any) {
    this.changed = false;
    this.context = new import0.TaskOptionsComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
  }
  check_projectId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this.changed = true;
      this.context.projectId = currValue;
      this._expr_0 = currValue;
    }
  }
  check_projectName(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this.changed = true;
      this.context.projectName = currValue;
      this._expr_1 = currValue;
    }
  }
  check_taskId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this.changed = true;
      this.context.taskId = currValue;
      this._expr_2 = currValue;
    }
  }
  check_taskName(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this.changed = true;
      this.context.taskName = currValue;
      this._expr_3 = currValue;
    }
  }
  check_taskDescription(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this.changed = true;
      this.context.taskDescription = currValue;
      this._expr_4 = currValue;
    }
  }
  check_options(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this.changed = true;
      this.context.options = currValue;
      this._expr_5 = currValue;
    }
  }
  check_taskOptions(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this.changed = true;
      this.context.taskOptions = currValue;
      this._expr_6 = currValue;
    }
  }
  detectChangesInInputProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  detectChangesInHostProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
}
var renderType_TaskOptionsComponent_Host:import4.RenderComponentType = (null as any);
class _View_TaskOptionsComponent_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _TaskOptionsComponent_0_4:Wrapper_TaskOptionsComponent;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent_Host0,renderType_TaskOptionsComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.selectOrCreateRenderHostElement(this.renderer,'task-options',import2.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_TaskOptionsComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TaskOptionsComponent_0_4 = new Wrapper_TaskOptionsComponent(this.parentInjector.get(import8.TaskService));
    this._appEl_0.initComponent(this._TaskOptionsComponent_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._TaskOptionsComponent_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TaskOptionsComponent) && (0 === requestNodeIndex))) { return this._TaskOptionsComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TaskOptionsComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._TaskOptionsComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._TaskOptionsComponent_0_4.context.ngAfterViewInit(); } }
  }
}
function viewFactory_TaskOptionsComponent_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_TaskOptionsComponent_Host === (null as any))) { (renderType_TaskOptionsComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_TaskOptionsComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const TaskOptionsComponentNgFactory:import10.ComponentFactory<import0.TaskOptionsComponent> = new import10.ComponentFactory<import0.TaskOptionsComponent>('task-options',viewFactory_TaskOptionsComponent_Host0,import0.TaskOptionsComponent);
const styles_TaskOptionsComponent:any[] = ([] as any[]);
var renderType_TaskOptionsComponent:import4.RenderComponentType = (null as any);
class _View_TaskOptionsComponent0 extends import3.AppView<import0.TaskOptionsComponent> {
  _viewQuery_btRun_0:import11.QueryList<any>;
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _text_10:any;
  _el_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  _el_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  _text_20:any;
  _el_21:any;
  _el_22:any;
  _text_23:any;
  _text_24:any;
  _text_25:any;
  _text_26:any;
  _el_27:any;
  _text_28:any;
  _anchor_29:any;
  /*private*/ _appEl_29:import5.AppElement;
  _TemplateRef_29_5:any;
  _NgIf_29_6:import12.Wrapper_NgIf;
  _text_30:any;
  _anchor_31:any;
  /*private*/ _appEl_31:import5.AppElement;
  _TemplateRef_31_5:any;
  _NgIf_31_6:import12.Wrapper_NgIf;
  _text_32:any;
  _text_33:any;
  _text_34:any;
  /*private*/ _expr_42:any;
  /*private*/ _expr_43:any;
  /*private*/ _expr_44:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent0,renderType_TaskOptionsComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_42 = import1.UNINITIALIZED;
    this._expr_43 = import1.UNINITIALIZED;
    this._expr_44 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._viewQuery_btRun_0 = new import11.QueryList<any>();
    this._el_0 = import2.createRenderElement(this.renderer,parentRenderNode,'div',new import2.InlineArray4(4,'class','modal','style','display: block'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'div',new import2.InlineArray2(2,'class','modal-content'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n		',(null as any));
    this._el_4 = import2.createRenderElement(this.renderer,this._el_2,'div',new import2.InlineArray2(2,'class','modal-body'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n\n			',(null as any));
    this._el_6 = import2.createRenderElement(this.renderer,this._el_4,'div',new import2.InlineArray2(2,'style','padding: 12px 16px 2px 16px'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n				',(null as any));
    this._el_8 = import2.createRenderElement(this.renderer,this._el_6,'h4',new import2.InlineArray2(2,'style','width: 100%; text-align: right;'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'RUN NOW',(null as any));
    this._text_10 = this.renderer.createText(this._el_6,'\n				',(null as any));
    this._el_11 = import2.createRenderElement(this.renderer,this._el_6,'div',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._el_12 = import2.createRenderElement(this.renderer,this._el_11,'strong',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'Project:',(null as any));
    this._text_14 = this.renderer.createText(this._el_11,'',(null as any));
    this._text_15 = this.renderer.createText(this._el_6,'\n				',(null as any));
    this._el_16 = import2.createRenderElement(this.renderer,this._el_6,'div',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._el_17 = import2.createRenderElement(this.renderer,this._el_16,'strong',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_18 = this.renderer.createText(this._el_17,'Task:',(null as any));
    this._text_19 = this.renderer.createText(this._el_16,'',(null as any));
    this._text_20 = this.renderer.createText(this._el_6,'\n				',(null as any));
    this._el_21 = import2.createRenderElement(this.renderer,this._el_6,'div',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._el_22 = import2.createRenderElement(this.renderer,this._el_21,'strong',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_23 = this.renderer.createText(this._el_22,'Description:',(null as any));
    this._text_24 = this.renderer.createText(this._el_21,'',(null as any));
    this._text_25 = this.renderer.createText(this._el_6,'\n			',(null as any));
    this._text_26 = this.renderer.createText(this._el_4,'\n\n			',(null as any));
    this._el_27 = import2.createRenderElement(this.renderer,this._el_4,'hr',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_28 = this.renderer.createText(this._el_4,'\n\n			',(null as any));
    this._anchor_29 = this.renderer.createTemplateAnchor(this._el_4,(null as any));
    this._appEl_29 = new import5.AppElement(29,4,this,this._anchor_29);
    this._TemplateRef_29_5 = new import13.TemplateRef_(this._appEl_29,viewFactory_TaskOptionsComponent1);
    this._NgIf_29_6 = new import12.Wrapper_NgIf(this._appEl_29.vcRef,this._TemplateRef_29_5);
    this._text_30 = this.renderer.createText(this._el_4,'\n\n			',(null as any));
    this._anchor_31 = this.renderer.createTemplateAnchor(this._el_4,(null as any));
    this._appEl_31 = new import5.AppElement(31,4,this,this._anchor_31);
    this._TemplateRef_31_5 = new import13.TemplateRef_(this._appEl_31,viewFactory_TaskOptionsComponent2);
    this._NgIf_31_6 = new import12.Wrapper_NgIf(this._appEl_31.vcRef,this._TemplateRef_31_5);
    this._text_32 = this.renderer.createText(this._el_4,'\n		',(null as any));
    this._text_33 = this.renderer.createText(this._el_2,'\n	',(null as any));
    this._text_34 = this.renderer.createText(this._el_0,'\n',(null as any));
    this.init(([] as any[]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._el_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._text_15,
      this._el_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._text_20,
      this._el_21,
      this._el_22,
      this._text_23,
      this._text_24,
      this._text_25,
      this._text_26,
      this._el_27,
      this._text_28,
      this._anchor_29,
      this._text_30,
      this._anchor_31,
      this._text_32,
      this._text_33,
      this._text_34
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (29 === requestNodeIndex))) { return this._TemplateRef_29_5; }
    if (((token === import14.NgIf) && (29 === requestNodeIndex))) { return this._NgIf_29_6.context; }
    if (((token === import13.TemplateRef) && (31 === requestNodeIndex))) { return this._TemplateRef_31_5; }
    if (((token === import14.NgIf) && (31 === requestNodeIndex))) { return this._NgIf_31_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_29_0_0:any = this.context.showEmptyMessage;
    this._NgIf_29_6.check_ngIf(currVal_29_0_0,throwOnChange,false);
    this._NgIf_29_6.detectChangesInInputProps(this,this._anchor_29,throwOnChange);
    const currVal_31_0_0:any = this.context.form;
    this._NgIf_31_6.check_ngIf(currVal_31_0_0,throwOnChange,false);
    this._NgIf_31_6.detectChangesInInputProps(this,this._anchor_31,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_42:any = import2.interpolate(1,' ',this.context.projectName,'');
    if (import2.checkBinding(throwOnChange,this._expr_42,currVal_42)) {
      this.renderer.setText(this._text_14,currVal_42);
      this._expr_42 = currVal_42;
    }
    const currVal_43:any = import2.interpolate(1,' ',this.context.taskName,'');
    if (import2.checkBinding(throwOnChange,this._expr_43,currVal_43)) {
      this.renderer.setText(this._text_19,currVal_43);
      this._expr_43 = currVal_43;
    }
    const currVal_44:any = import2.interpolate(1,' ',this.context.taskDescription,'');
    if (import2.checkBinding(throwOnChange,this._expr_44,currVal_44)) {
      this.renderer.setText(this._text_24,currVal_44);
      this._expr_44 = currVal_44;
    }
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if (this._viewQuery_btRun_0.dirty) {
        this._viewQuery_btRun_0.reset([this._appEl_31.mapNestedViews(_View_TaskOptionsComponent2,(nestedView:_View_TaskOptionsComponent2):any => {
          return [new import15.ElementRef(nestedView._el_11)];
      })]);
      this.context.btRun = this._viewQuery_btRun_0.first;
    } }
  }
}
export function viewFactory_TaskOptionsComponent0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.TaskOptionsComponent> {
  if ((renderType_TaskOptionsComponent === (null as any))) { (renderType_TaskOptionsComponent = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_TaskOptionsComponent,{})); }
  return new _View_TaskOptionsComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent1 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent1,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'div',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n				',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'h5',new import2.InlineArray2(2,'style','padding: 2px 16px; width: 100%; text-align: center;'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'No options are required for this task, click on RUN button to start the task',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n			',(null as any));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
}
function viewFactory_TaskOptionsComponent1(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent2 extends import3.AppView<any> {
  _el_0:any;
  _FormGroupDirective_0_3:import16.Wrapper_FormGroupDirective;
  _ControlContainer_0_4:any;
  _NgControlStatusGroup_0_5:import17.Wrapper_NgControlStatusGroup;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _appEl_2:import5.AppElement;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import18.Wrapper_NgFor;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _text_13:any;
  _text_14:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent2,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'form',new import2.InlineArray2(2,'autocomplete','off'),(null as any));
    this._FormGroupDirective_0_3 = new import16.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_0_4 = this._FormGroupDirective_0_3.context;
    this._NgControlStatusGroup_0_5 = new import17.Wrapper_NgControlStatusGroup(this._ControlContainer_0_4);
    this._text_1 = this.renderer.createText(this._el_0,'\n\n				',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_2 = new import5.AppElement(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import13.TemplateRef_(this._appEl_2,viewFactory_TaskOptionsComponent3);
    this._NgFor_2_6 = new import18.Wrapper_NgFor(this._appEl_2.vcRef,this._TemplateRef_2_5,this.parent.parentInjector.get(import19.IterableDiffers),this.parent.ref);
    this._text_3 = this.renderer.createText(this._el_0,'\n\n				',(null as any));
    this._el_4 = import2.createRenderElement(this.renderer,this._el_0,'hr',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_0,'\n\n				',(null as any));
    this._el_6 = import2.createRenderElement(this.renderer,this._el_0,'div',new import2.InlineArray2(2,'style','text-align: right; padding: 12px 16px;'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n					',(null as any));
    this._el_8 = import2.createRenderElement(this.renderer,this._el_6,'button',new import2.InlineArray4(4,'class','btn btn-default','type','button'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'Cancel',(null as any));
    this._text_10 = this.renderer.createText(this._el_6,'\n					',(null as any));
    this._el_11 = import2.createRenderElement(this.renderer,this._el_6,'button',new import2.InlineArray8(6,'class','btn btn-success','style','margin-left: 10px','type','submit'),(null as any));
    this._text_12 = this.renderer.createText(this._el_11,'Run',(null as any));
    this._text_13 = this.renderer.createText(this._el_6,'\n				',(null as any));
    this._text_14 = this.renderer.createText(this._el_0,'\n\n			',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'ngSubmit',this.eventHandler(this._handle_ngSubmit_0_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_0,'submit',this.eventHandler(this._handle_submit_0_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_0,'reset',this.eventHandler(this._handle_reset_0_2.bind(this)));
    const subscription_0:any = this._FormGroupDirective_0_3.context.ngSubmit.subscribe(this.eventHandler(this._handle_ngSubmit_0_0.bind(this)));
    var disposable_3:Function = this.renderer.listen(this._el_8,'click',this.eventHandler(this._handle_click_8_0.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._text_14
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    ,[subscription_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import20.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6.context; }
    if (((token === import21.FormGroupDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._FormGroupDirective_0_3.context; }
    if (((token === import22.ControlContainer) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._ControlContainer_0_4; }
    if (((token === import23.NgControlStatusGroup) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgControlStatusGroup_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parent.context.form;
    this._FormGroupDirective_0_3.check_form(currVal_0_0_0,throwOnChange,false);
    this._FormGroupDirective_0_3.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this._NgControlStatusGroup_0_5.detectChangesInInputProps(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = this.parent.context.taskOptions;
    this._NgFor_2_6.check_ngForOf(currVal_2_0_0,throwOnChange,false);
    this._NgFor_2_6.detectChangesInInputProps(this,this._anchor_2,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._FormGroupDirective_0_3.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this._NgControlStatusGroup_0_5.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<_View_TaskOptionsComponent0>this.parent)._viewQuery_btRun_0.setDirty();
  }
  private _handle_ngSubmit_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this.parent.context.run()) !== false);
    return (true && pd_0_0);
  }
  private _handle_submit_0_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this._FormGroupDirective_0_3.context.onSubmit($event)) !== false);
    return (true && pd_0_0);
  }
  private _handle_reset_0_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this._FormGroupDirective_0_3.context.onReset()) !== false);
    return (true && pd_0_0);
  }
  private _handle_click_8_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_8_0:any = ((<any>this.parent.context.cancel()) !== false);
    return (true && pd_8_0);
  }
}
function viewFactory_TaskOptionsComponent2(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent2(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent3 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _NgSwitch_2_3:import24.Wrapper_NgSwitch;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _appEl_4:import5.AppElement;
  _TemplateRef_4_5:any;
  _NgSwitchCase_4_6:import24.Wrapper_NgSwitchCase;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _appEl_6:import5.AppElement;
  _TemplateRef_6_5:any;
  _NgSwitchCase_6_6:import24.Wrapper_NgSwitchCase;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _appEl_8:import5.AppElement;
  _TemplateRef_8_5:any;
  _NgSwitchCase_8_6:import24.Wrapper_NgSwitchCase;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _appEl_10:import5.AppElement;
  _TemplateRef_10_5:any;
  _NgSwitchCase_10_6:import24.Wrapper_NgSwitchCase;
  _text_11:any;
  _anchor_12:any;
  /*private*/ _appEl_12:import5.AppElement;
  _TemplateRef_12_5:any;
  _NgSwitchCase_12_6:import24.Wrapper_NgSwitchCase;
  _text_13:any;
  _anchor_14:any;
  /*private*/ _appEl_14:import5.AppElement;
  _TemplateRef_14_5:any;
  _NgSwitchCase_14_6:import24.Wrapper_NgSwitchCase;
  _text_15:any;
  _text_16:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent3,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'div',new import2.InlineArray2(2,'style','padding: 2px 16px;'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n\n					',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'div',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSwitch_2_3 = new import24.Wrapper_NgSwitch();
    this._text_3 = this.renderer.createText(this._el_2,'\n\n						',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_4 = new import5.AppElement(4,2,this,this._anchor_4);
    this._TemplateRef_4_5 = new import13.TemplateRef_(this._appEl_4,viewFactory_TaskOptionsComponent4);
    this._NgSwitchCase_4_6 = new import24.Wrapper_NgSwitchCase(this._appEl_4.vcRef,this._TemplateRef_4_5,this._NgSwitch_2_3.context);
    this._text_5 = this.renderer.createText(this._el_2,'\n\n						',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_6 = new import5.AppElement(6,2,this,this._anchor_6);
    this._TemplateRef_6_5 = new import13.TemplateRef_(this._appEl_6,viewFactory_TaskOptionsComponent5);
    this._NgSwitchCase_6_6 = new import24.Wrapper_NgSwitchCase(this._appEl_6.vcRef,this._TemplateRef_6_5,this._NgSwitch_2_3.context);
    this._text_7 = this.renderer.createText(this._el_2,'\n\n						',(null as any));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_8 = new import5.AppElement(8,2,this,this._anchor_8);
    this._TemplateRef_8_5 = new import13.TemplateRef_(this._appEl_8,viewFactory_TaskOptionsComponent6);
    this._NgSwitchCase_8_6 = new import24.Wrapper_NgSwitchCase(this._appEl_8.vcRef,this._TemplateRef_8_5,this._NgSwitch_2_3.context);
    this._text_9 = this.renderer.createText(this._el_2,'\n\n						',(null as any));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_10 = new import5.AppElement(10,2,this,this._anchor_10);
    this._TemplateRef_10_5 = new import13.TemplateRef_(this._appEl_10,viewFactory_TaskOptionsComponent7);
    this._NgSwitchCase_10_6 = new import24.Wrapper_NgSwitchCase(this._appEl_10.vcRef,this._TemplateRef_10_5,this._NgSwitch_2_3.context);
    this._text_11 = this.renderer.createText(this._el_2,'\n\n						',(null as any));
    this._anchor_12 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_12 = new import5.AppElement(12,2,this,this._anchor_12);
    this._TemplateRef_12_5 = new import13.TemplateRef_(this._appEl_12,viewFactory_TaskOptionsComponent9);
    this._NgSwitchCase_12_6 = new import24.Wrapper_NgSwitchCase(this._appEl_12.vcRef,this._TemplateRef_12_5,this._NgSwitch_2_3.context);
    this._text_13 = this.renderer.createText(this._el_2,'\n\n						',(null as any));
    this._anchor_14 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_14 = new import5.AppElement(14,2,this,this._anchor_14);
    this._TemplateRef_14_5 = new import13.TemplateRef_(this._appEl_14,viewFactory_TaskOptionsComponent10);
    this._NgSwitchCase_14_6 = new import24.Wrapper_NgSwitchCase(this._appEl_14.vcRef,this._TemplateRef_14_5,this._NgSwitch_2_3.context);
    this._text_15 = this.renderer.createText(this._el_2,'\n					',(null as any));
    this._text_16 = this.renderer.createText(this._el_0,'\n				',(null as any));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._anchor_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._anchor_12,
      this._text_13,
      this._anchor_14,
      this._text_15,
      this._text_16
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import25.NgSwitchCase) && (4 === requestNodeIndex))) { return this._NgSwitchCase_4_6.context; }
    if (((token === import13.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import25.NgSwitchCase) && (6 === requestNodeIndex))) { return this._NgSwitchCase_6_6.context; }
    if (((token === import13.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import25.NgSwitchCase) && (8 === requestNodeIndex))) { return this._NgSwitchCase_8_6.context; }
    if (((token === import13.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import25.NgSwitchCase) && (10 === requestNodeIndex))) { return this._NgSwitchCase_10_6.context; }
    if (((token === import13.TemplateRef) && (12 === requestNodeIndex))) { return this._TemplateRef_12_5; }
    if (((token === import25.NgSwitchCase) && (12 === requestNodeIndex))) { return this._NgSwitchCase_12_6.context; }
    if (((token === import13.TemplateRef) && (14 === requestNodeIndex))) { return this._TemplateRef_14_5; }
    if (((token === import25.NgSwitchCase) && (14 === requestNodeIndex))) { return this._NgSwitchCase_14_6.context; }
    if (((token === import25.NgSwitch) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 15)))) { return this._NgSwitch_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context.$implicit.type;
    this._NgSwitch_2_3.check_ngSwitch(currVal_2_0_0,throwOnChange,false);
    this._NgSwitch_2_3.detectChangesInInputProps(this,this._el_2,throwOnChange);
    const currVal_4_0_0:any = 'text';
    this._NgSwitchCase_4_6.check_ngSwitchCase(currVal_4_0_0,throwOnChange,false);
    this._NgSwitchCase_4_6.detectChangesInInputProps(this,this._anchor_4,throwOnChange);
    const currVal_6_0_0:any = 'password';
    this._NgSwitchCase_6_6.check_ngSwitchCase(currVal_6_0_0,throwOnChange,false);
    this._NgSwitchCase_6_6.detectChangesInInputProps(this,this._anchor_6,throwOnChange);
    const currVal_8_0_0:any = 'hidden';
    this._NgSwitchCase_8_6.check_ngSwitchCase(currVal_8_0_0,throwOnChange,false);
    this._NgSwitchCase_8_6.detectChangesInInputProps(this,this._anchor_8,throwOnChange);
    const currVal_10_0_0:any = 'select';
    this._NgSwitchCase_10_6.check_ngSwitchCase(currVal_10_0_0,throwOnChange,false);
    this._NgSwitchCase_10_6.detectChangesInInputProps(this,this._anchor_10,throwOnChange);
    const currVal_12_0_0:any = 'checkbox';
    this._NgSwitchCase_12_6.check_ngSwitchCase(currVal_12_0_0,throwOnChange,false);
    this._NgSwitchCase_12_6.detectChangesInInputProps(this,this._anchor_12,throwOnChange);
    const currVal_14_0_0:any = 'textarea';
    this._NgSwitchCase_14_6.check_ngSwitchCase(currVal_14_0_0,throwOnChange,false);
    this._NgSwitchCase_14_6.detectChangesInInputProps(this,this._anchor_14,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._NgSwitch_2_3.detectChangesInHostProps(this,this._el_2,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_TaskOptionsComponent3(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent3(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent4 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _DefaultValueAccessor_5_3:import26.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_5_4:any[];
  _FormControlName_5_5:import27.Wrapper_FormControlName;
  _NgControl_5_6:any;
  _NgControlStatus_5_7:import17.Wrapper_NgControlStatus;
  _text_6:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent4,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_12 = import1.UNINITIALIZED;
    this._expr_13 = import1.UNINITIALIZED;
    this._expr_14 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'div',new import2.InlineArray2(2,'class','form-group'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n							',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'label',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n							',(null as any));
    this._el_5 = import2.createRenderElement(this.renderer,this._el_0,'input',new import2.InlineArray8(6,'autocomplete','off','class','form-control','type','text'),(null as any));
    this._DefaultValueAccessor_5_3 = new import26.Wrapper_DefaultValueAccessor(this.renderer,new import15.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_4 = [this._DefaultValueAccessor_5_3.context];
    this._FormControlName_5_5 = new import27.Wrapper_FormControlName((<_View_TaskOptionsComponent2>this.parent.parent)._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_4);
    this._NgControl_5_6 = this._FormControlName_5_5.context;
    this._NgControlStatus_5_7 = new import17.Wrapper_NgControlStatus(this._NgControl_5_6);
    this._text_6 = this.renderer.createText(this._el_0,'\n						',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_5,'input',this.eventHandler(this._handle_input_5_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_5,'blur',this.eventHandler(this._handle_blur_5_1.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import28.DefaultValueAccessor) && (5 === requestNodeIndex))) { return this._DefaultValueAccessor_5_3.context; }
    if (((token === import29.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_4; }
    if (((token === import30.FormControlName) && (5 === requestNodeIndex))) { return this._FormControlName_5_5.context; }
    if (((token === import31.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_6; }
    if (((token === import23.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_5_3.detectChangesInInputProps(this,this._el_5,throwOnChange);
    const currVal_5_1_0:any = this.parent.context.$implicit.id;
    this._FormControlName_5_5.check_name(currVal_5_1_0,throwOnChange,false);
    this._FormControlName_5_5.detectChangesInInputProps(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.detectChangesInInputProps(this,this._el_5,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_12:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementAttribute(this._el_2,'for',((currVal_12 == (null as any))? (null as any): currVal_12.toString()));
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = import2.interpolate(1,'',this.parent.context.$implicit.description,'');
    if (import2.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setText(this._text_3,currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementProperty(this._el_5,'id',currVal_14);
      this._expr_14 = currVal_14;
    }
    this._DefaultValueAccessor_5_3.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this._FormControlName_5_5.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_5_5.context.ngOnDestroy();
  }
  private _handle_input_5_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this._DefaultValueAccessor_5_3.context.onChange($event.target.value)) !== false);
    return (true && pd_5_0);
  }
  private _handle_blur_5_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this._DefaultValueAccessor_5_3.context.onTouched()) !== false);
    return (true && pd_5_0);
  }
}
function viewFactory_TaskOptionsComponent4(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent4(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent5 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _DefaultValueAccessor_5_3:import26.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_5_4:any[];
  _FormControlName_5_5:import27.Wrapper_FormControlName;
  _NgControl_5_6:any;
  _NgControlStatus_5_7:import17.Wrapper_NgControlStatus;
  _text_6:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent5,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_12 = import1.UNINITIALIZED;
    this._expr_13 = import1.UNINITIALIZED;
    this._expr_14 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'div',new import2.InlineArray2(2,'class','form-group'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n							',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'label',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n							',(null as any));
    this._el_5 = import2.createRenderElement(this.renderer,this._el_0,'input',new import2.InlineArray8(6,'autocomplete','off','class','form-control','type','password'),(null as any));
    this._DefaultValueAccessor_5_3 = new import26.Wrapper_DefaultValueAccessor(this.renderer,new import15.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_4 = [this._DefaultValueAccessor_5_3.context];
    this._FormControlName_5_5 = new import27.Wrapper_FormControlName((<_View_TaskOptionsComponent2>this.parent.parent)._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_4);
    this._NgControl_5_6 = this._FormControlName_5_5.context;
    this._NgControlStatus_5_7 = new import17.Wrapper_NgControlStatus(this._NgControl_5_6);
    this._text_6 = this.renderer.createText(this._el_0,'\n						',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_5,'input',this.eventHandler(this._handle_input_5_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_5,'blur',this.eventHandler(this._handle_blur_5_1.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import28.DefaultValueAccessor) && (5 === requestNodeIndex))) { return this._DefaultValueAccessor_5_3.context; }
    if (((token === import29.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_4; }
    if (((token === import30.FormControlName) && (5 === requestNodeIndex))) { return this._FormControlName_5_5.context; }
    if (((token === import31.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_6; }
    if (((token === import23.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_5_3.detectChangesInInputProps(this,this._el_5,throwOnChange);
    const currVal_5_1_0:any = this.parent.context.$implicit.id;
    this._FormControlName_5_5.check_name(currVal_5_1_0,throwOnChange,false);
    this._FormControlName_5_5.detectChangesInInputProps(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.detectChangesInInputProps(this,this._el_5,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_12:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementAttribute(this._el_2,'for',((currVal_12 == (null as any))? (null as any): currVal_12.toString()));
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = import2.interpolate(1,'',this.parent.context.$implicit.description,'');
    if (import2.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setText(this._text_3,currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementProperty(this._el_5,'id',currVal_14);
      this._expr_14 = currVal_14;
    }
    this._DefaultValueAccessor_5_3.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this._FormControlName_5_5.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_5_5.context.ngOnDestroy();
  }
  private _handle_input_5_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this._DefaultValueAccessor_5_3.context.onChange($event.target.value)) !== false);
    return (true && pd_5_0);
  }
  private _handle_blur_5_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this._DefaultValueAccessor_5_3.context.onTouched()) !== false);
    return (true && pd_5_0);
  }
}
function viewFactory_TaskOptionsComponent5(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent5(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent6 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _DefaultValueAccessor_2_3:import26.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_2_4:any[];
  _FormControlName_2_5:import27.Wrapper_FormControlName;
  _NgControl_2_6:any;
  _NgControlStatus_2_7:import17.Wrapper_NgControlStatus;
  _text_3:any;
  /*private*/ _expr_9:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent6,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_9 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'div',new import2.InlineArray2(2,'class','form-group'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n							',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'input',new import2.InlineArray8(6,'autocomplete','off','class','form-control','type','hidden'),(null as any));
    this._DefaultValueAccessor_2_3 = new import26.Wrapper_DefaultValueAccessor(this.renderer,new import15.ElementRef(this._el_2));
    this._NG_VALUE_ACCESSOR_2_4 = [this._DefaultValueAccessor_2_3.context];
    this._FormControlName_2_5 = new import27.Wrapper_FormControlName((<_View_TaskOptionsComponent2>this.parent.parent)._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_2_4);
    this._NgControl_2_6 = this._FormControlName_2_5.context;
    this._NgControlStatus_2_7 = new import17.Wrapper_NgControlStatus(this._NgControl_2_6);
    this._text_3 = this.renderer.createText(this._el_0,'\n						',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_2,'input',this.eventHandler(this._handle_input_2_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_2,'blur',this.eventHandler(this._handle_blur_2_1.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import28.DefaultValueAccessor) && (2 === requestNodeIndex))) { return this._DefaultValueAccessor_2_3.context; }
    if (((token === import29.NG_VALUE_ACCESSOR) && (2 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_2_4; }
    if (((token === import30.FormControlName) && (2 === requestNodeIndex))) { return this._FormControlName_2_5.context; }
    if (((token === import31.NgControl) && (2 === requestNodeIndex))) { return this._NgControl_2_6; }
    if (((token === import23.NgControlStatus) && (2 === requestNodeIndex))) { return this._NgControlStatus_2_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_2_3.detectChangesInInputProps(this,this._el_2,throwOnChange);
    const currVal_2_1_0:any = this.parent.context.$implicit.id;
    this._FormControlName_2_5.check_name(currVal_2_1_0,throwOnChange,false);
    this._FormControlName_2_5.detectChangesInInputProps(this,this._el_2,throwOnChange);
    this._NgControlStatus_2_7.detectChangesInInputProps(this,this._el_2,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_9:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementProperty(this._el_2,'id',currVal_9);
      this._expr_9 = currVal_9;
    }
    this._DefaultValueAccessor_2_3.detectChangesInHostProps(this,this._el_2,throwOnChange);
    this._FormControlName_2_5.detectChangesInHostProps(this,this._el_2,throwOnChange);
    this._NgControlStatus_2_7.detectChangesInHostProps(this,this._el_2,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_2_5.context.ngOnDestroy();
  }
  private _handle_input_2_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_2_0:any = ((<any>this._DefaultValueAccessor_2_3.context.onChange($event.target.value)) !== false);
    return (true && pd_2_0);
  }
  private _handle_blur_2_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_2_0:any = ((<any>this._DefaultValueAccessor_2_3.context.onTouched()) !== false);
    return (true && pd_2_0);
  }
}
function viewFactory_TaskOptionsComponent6(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent6(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent7 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _SelectControlValueAccessor_5_3:import32.Wrapper_SelectControlValueAccessor;
  _NG_VALUE_ACCESSOR_5_4:any[];
  _FormControlName_5_5:import27.Wrapper_FormControlName;
  _NgControl_5_6:any;
  _NgControlStatus_5_7:import17.Wrapper_NgControlStatus;
  _text_6:any;
  _anchor_7:any;
  /*private*/ _appEl_7:import5.AppElement;
  _TemplateRef_7_5:any;
  _NgFor_7_6:import18.Wrapper_NgFor;
  _text_8:any;
  _text_9:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent7,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_18 = import1.UNINITIALIZED;
    this._expr_19 = import1.UNINITIALIZED;
    this._expr_20 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'div',new import2.InlineArray2(2,'class','form-group'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n							',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'label',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n\n							',(null as any));
    this._el_5 = import2.createRenderElement(this.renderer,this._el_0,'select',new import2.InlineArray4(4,'autocomplete','off','class','form-control'),(null as any));
    this._SelectControlValueAccessor_5_3 = new import32.Wrapper_SelectControlValueAccessor(this.renderer,new import15.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_4 = [this._SelectControlValueAccessor_5_3.context];
    this._FormControlName_5_5 = new import27.Wrapper_FormControlName((<_View_TaskOptionsComponent2>this.parent.parent)._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_4);
    this._NgControl_5_6 = this._FormControlName_5_5.context;
    this._NgControlStatus_5_7 = new import17.Wrapper_NgControlStatus(this._NgControl_5_6);
    this._text_6 = this.renderer.createText(this._el_5,'\n								',(null as any));
    this._anchor_7 = this.renderer.createTemplateAnchor(this._el_5,(null as any));
    this._appEl_7 = new import5.AppElement(7,5,this,this._anchor_7);
    this._TemplateRef_7_5 = new import13.TemplateRef_(this._appEl_7,viewFactory_TaskOptionsComponent8);
    this._NgFor_7_6 = new import18.Wrapper_NgFor(this._appEl_7.vcRef,this._TemplateRef_7_5,this.parent.parent.parent.parentInjector.get(import19.IterableDiffers),this.parent.parent.parent.ref);
    this._text_8 = this.renderer.createText(this._el_5,'\n							',(null as any));
    this._text_9 = this.renderer.createText(this._el_0,'\n						',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_5,'change',this.eventHandler(this._handle_change_5_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_5,'blur',this.eventHandler(this._handle_blur_5_1.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._anchor_7,
      this._text_8,
      this._text_9
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (7 === requestNodeIndex))) { return this._TemplateRef_7_5; }
    if (((token === import20.NgFor) && (7 === requestNodeIndex))) { return this._NgFor_7_6.context; }
    if (((token === import33.SelectControlValueAccessor) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._SelectControlValueAccessor_5_3.context; }
    if (((token === import29.NG_VALUE_ACCESSOR) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NG_VALUE_ACCESSOR_5_4; }
    if (((token === import30.FormControlName) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._FormControlName_5_5.context; }
    if (((token === import31.NgControl) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgControl_5_6; }
    if (((token === import23.NgControlStatus) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgControlStatus_5_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._SelectControlValueAccessor_5_3.detectChangesInInputProps(this,this._el_5,throwOnChange);
    const currVal_5_1_0:any = this.parent.context.$implicit.id;
    this._FormControlName_5_5.check_name(currVal_5_1_0,throwOnChange,false);
    this._FormControlName_5_5.detectChangesInInputProps(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.detectChangesInInputProps(this,this._el_5,throwOnChange);
    const currVal_7_0_0:any = this.parent.context.$implicit.values;
    this._NgFor_7_6.check_ngForOf(currVal_7_0_0,throwOnChange,false);
    this._NgFor_7_6.detectChangesInInputProps(this,this._anchor_7,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_18:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementAttribute(this._el_2,'for',((currVal_18 == (null as any))? (null as any): currVal_18.toString()));
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = import2.interpolate(1,'',this.parent.context.$implicit.description,'');
    if (import2.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setText(this._text_3,currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementProperty(this._el_5,'id',currVal_20);
      this._expr_20 = currVal_20;
    }
    this._SelectControlValueAccessor_5_3.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this._FormControlName_5_5.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_5_5.context.ngOnDestroy();
  }
  private _handle_change_5_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this._SelectControlValueAccessor_5_3.context.onChange($event.target.value)) !== false);
    return (true && pd_5_0);
  }
  private _handle_blur_5_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this._SelectControlValueAccessor_5_3.context.onTouched()) !== false);
    return (true && pd_5_0);
  }
}
function viewFactory_TaskOptionsComponent7(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent7(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent8 extends import3.AppView<any> {
  _el_0:any;
  _NgSelectOption_0_3:import32.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_0_4:import34.Wrapper_NgSelectMultipleOption;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent8,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'option',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSelectOption_0_3 = new import32.Wrapper_NgSelectOption(new import15.ElementRef(this._el_0),this.renderer,(<_View_TaskOptionsComponent7>this.parent)._SelectControlValueAccessor_5_3.context);
    this._NgSelectMultipleOption_0_4 = new import34.Wrapper_NgSelectMultipleOption(new import15.ElementRef(this._el_0),this.renderer,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import33.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectOption_0_3.context; }
    if (((token === import35.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectMultipleOption_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.$implicit.value;
    this._NgSelectOption_0_3.check_value(currVal_0_0_0,throwOnChange,false);
    this._NgSelectOption_0_3.detectChangesInInputProps(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.context.$implicit.value;
    this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._NgSelectOption_0_3.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this._NgSelectMultipleOption_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    const currVal_4:any = import2.interpolate(1,'',this.context.$implicit.text,'');
    if (import2.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_1,currVal_4);
      this._expr_4 = currVal_4;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._NgSelectOption_0_3.context.ngOnDestroy();
    this._NgSelectMultipleOption_0_4.context.ngOnDestroy();
  }
}
function viewFactory_TaskOptionsComponent8(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent8(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent9 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _CheckboxControlValueAccessor_4_3:import36.Wrapper_CheckboxControlValueAccessor;
  _NG_VALUE_ACCESSOR_4_4:any[];
  _FormControlName_4_5:import27.Wrapper_FormControlName;
  _NgControl_4_6:any;
  _NgControlStatus_4_7:import17.Wrapper_NgControlStatus;
  _text_5:any;
  _text_6:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent9,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_12 = import1.UNINITIALIZED;
    this._expr_13 = import1.UNINITIALIZED;
    this._expr_14 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'div',new import2.InlineArray2(2,'class','checkbox'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n							',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'label',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n								',(null as any));
    this._el_4 = import2.createRenderElement(this.renderer,this._el_2,'input',new import2.InlineArray4(4,'autocomplete','off','type','checkbox'),(null as any));
    this._CheckboxControlValueAccessor_4_3 = new import36.Wrapper_CheckboxControlValueAccessor(this.renderer,new import15.ElementRef(this._el_4));
    this._NG_VALUE_ACCESSOR_4_4 = [this._CheckboxControlValueAccessor_4_3.context];
    this._FormControlName_4_5 = new import27.Wrapper_FormControlName((<_View_TaskOptionsComponent2>this.parent.parent)._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_4_4);
    this._NgControl_4_6 = this._FormControlName_4_5.context;
    this._NgControlStatus_4_7 = new import17.Wrapper_NgControlStatus(this._NgControl_4_6);
    this._text_5 = this.renderer.createText(this._el_2,'',(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n						',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_4,'change',this.eventHandler(this._handle_change_4_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_4,'blur',this.eventHandler(this._handle_blur_4_1.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import37.CheckboxControlValueAccessor) && (4 === requestNodeIndex))) { return this._CheckboxControlValueAccessor_4_3.context; }
    if (((token === import29.NG_VALUE_ACCESSOR) && (4 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_4_4; }
    if (((token === import30.FormControlName) && (4 === requestNodeIndex))) { return this._FormControlName_4_5.context; }
    if (((token === import31.NgControl) && (4 === requestNodeIndex))) { return this._NgControl_4_6; }
    if (((token === import23.NgControlStatus) && (4 === requestNodeIndex))) { return this._NgControlStatus_4_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CheckboxControlValueAccessor_4_3.detectChangesInInputProps(this,this._el_4,throwOnChange);
    const currVal_4_1_0:any = this.parent.context.$implicit.id;
    this._FormControlName_4_5.check_name(currVal_4_1_0,throwOnChange,false);
    this._FormControlName_4_5.detectChangesInInputProps(this,this._el_4,throwOnChange);
    this._NgControlStatus_4_7.detectChangesInInputProps(this,this._el_4,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_12:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementAttribute(this._el_2,'for',((currVal_12 == (null as any))? (null as any): currVal_12.toString()));
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementProperty(this._el_4,'id',currVal_13);
      this._expr_13 = currVal_13;
    }
    this._CheckboxControlValueAccessor_4_3.detectChangesInHostProps(this,this._el_4,throwOnChange);
    this._FormControlName_4_5.detectChangesInHostProps(this,this._el_4,throwOnChange);
    this._NgControlStatus_4_7.detectChangesInHostProps(this,this._el_4,throwOnChange);
    const currVal_14:any = import2.interpolate(1,'\n								',this.parent.context.$implicit.description,'\n							');
    if (import2.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setText(this._text_5,currVal_14);
      this._expr_14 = currVal_14;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_4_5.context.ngOnDestroy();
  }
  private _handle_change_4_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_4_0:any = ((<any>this._CheckboxControlValueAccessor_4_3.context.onChange($event.target.checked)) !== false);
    return (true && pd_4_0);
  }
  private _handle_blur_4_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_4_0:any = ((<any>this._CheckboxControlValueAccessor_4_3.context.onTouched()) !== false);
    return (true && pd_4_0);
  }
}
function viewFactory_TaskOptionsComponent9(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent9(viewUtils,parentInjector,declarationEl);
}
class _View_TaskOptionsComponent10 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _DefaultValueAccessor_5_3:import26.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_5_4:any[];
  _FormControlName_5_5:import27.Wrapper_FormControlName;
  _NgControl_5_6:any;
  _NgControlStatus_5_7:import17.Wrapper_NgControlStatus;
  _text_6:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TaskOptionsComponent10,renderType_TaskOptionsComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_12 = import1.UNINITIALIZED;
    this._expr_13 = import1.UNINITIALIZED;
    this._expr_14 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'div',new import2.InlineArray2(2,'class','form-group'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n							',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'label',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n							',(null as any));
    this._el_5 = import2.createRenderElement(this.renderer,this._el_0,'textarea',new import2.InlineArray8(8,'autocomplete','off','class','form-control','rows','5','type','text'),(null as any));
    this._DefaultValueAccessor_5_3 = new import26.Wrapper_DefaultValueAccessor(this.renderer,new import15.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_4 = [this._DefaultValueAccessor_5_3.context];
    this._FormControlName_5_5 = new import27.Wrapper_FormControlName((<_View_TaskOptionsComponent2>this.parent.parent)._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_4);
    this._NgControl_5_6 = this._FormControlName_5_5.context;
    this._NgControlStatus_5_7 = new import17.Wrapper_NgControlStatus(this._NgControl_5_6);
    this._text_6 = this.renderer.createText(this._el_0,'\n						',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_5,'input',this.eventHandler(this._handle_input_5_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_5,'blur',this.eventHandler(this._handle_blur_5_1.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import28.DefaultValueAccessor) && (5 === requestNodeIndex))) { return this._DefaultValueAccessor_5_3.context; }
    if (((token === import29.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_4; }
    if (((token === import30.FormControlName) && (5 === requestNodeIndex))) { return this._FormControlName_5_5.context; }
    if (((token === import31.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_6; }
    if (((token === import23.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_5_3.detectChangesInInputProps(this,this._el_5,throwOnChange);
    const currVal_5_1_0:any = this.parent.context.$implicit.id;
    this._FormControlName_5_5.check_name(currVal_5_1_0,throwOnChange,false);
    this._FormControlName_5_5.detectChangesInInputProps(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.detectChangesInInputProps(this,this._el_5,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_12:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementAttribute(this._el_2,'for',((currVal_12 == (null as any))? (null as any): currVal_12.toString()));
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = import2.interpolate(1,'',this.parent.context.$implicit.description,'');
    if (import2.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setText(this._text_3,currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.parent.context.$implicit.id;
    if (import2.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementProperty(this._el_5,'id',currVal_14);
      this._expr_14 = currVal_14;
    }
    this._DefaultValueAccessor_5_3.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this._FormControlName_5_5.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_5_5.context.ngOnDestroy();
  }
  private _handle_input_5_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this._DefaultValueAccessor_5_3.context.onChange($event.target.value)) !== false);
    return (true && pd_5_0);
  }
  private _handle_blur_5_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this._DefaultValueAccessor_5_3.context.onTouched()) !== false);
    return (true && pd_5_0);
  }
}
function viewFactory_TaskOptionsComponent10(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TaskOptionsComponent10(viewUtils,parentInjector,declarationEl);
}